# Unique name for this workflow
name: Deployment

on:
    push:
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'Contributing.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - 'sfdx-project.json'

jobs:
    scratch-org-test:
        runs-on: ubuntu-latest
        environment: Test
        steps:
            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Setup node'
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: 'Install npm'
              run: npm install

            # Install Salesforce CLI
            - name: Install Salesforce CLI
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
                  mkdir sfdx-cli
                  tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
                  ./sfdx-cli/install

            # Start local testing

            # TODO uncomment
            # Prettier formatting
            # - name: 'Code formatting verification with Prettier'
            #   run: npm run prettier:verify

            # TODO uncomment
            # Lint LWC
            # - name: 'Lint Lightning Web Components'
            #   run: npm run lint:lwc

            # LWC unit tests
            # TODO uncomment lwc testing once tests have been created
            # - name: 'Run LWC Tests'
            #   run: npm run test:lwc

            # End local testing

            # Start remote testing

            # Store secrets for dev hubs
            - name: 'Populate auth files with DevHub SFDX URLs'
              shell: bash
              run: |
                  echo ${{ env.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  echo ${{ env.BACKUP_DEVHUB_1_SFDX_URL }} > ./BACKUP_DEVHUB_1_SFDX_URL.txt
              env:
                  DEVHUB_SFDX_URL: ${{ secrets.DEVHUB_SFDX_URL }}
                  BACKUP_DEVHUB_1_SFDX_URL: ${{ secrets.BACKUP_DEVHUB_1_SFDX_URL }}

            - name: 'Authorize Dev Hubs'
              run: |
                  sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_URL.txt --setalias nebula-logger-packaging --setdefaultdevhubusername
                  sfdx auth:sfdxurl:store --sfdxurlfile ./BACKUP_DEVHUB_1_SFDX_URL.txt --setalias nebula-logger-backup-devhub-1

            - name: 'Create Scratch Org with Experience Sites Enabled'
              run: npm run org:create:experience --devhubs nebula-logger-packaging,nebula-logger-backup-devhub-1

            - name: 'Deploy Metadata'
              run: npm run deploy

            - name: 'Run Apex Tests'
              run: npm run test:apex

            - name: 'Create unvalidated unlocked package version'
              run: npm run package:version:create:unlocked:skipvalidation

            - name: 'Create unvalidated managed package version'
              run: npm run package:version:create:managed:skipvalidation

            # TODO uncomment
            # - name: 'Create validated unlocked package version'
            #   run: npm run package:version:create:unlocked

            - name: 'Generate docs'
              run: npm run docs:generate

            # Upload code coverage data
            - name: 'Upload code coverage for Apex to Codecov.io'
              uses: codecov/codecov-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
